@import "tailwindcss";

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --card: 230 20% 96%;
    --popover: 0 100% 100%;
    --primary: 240 100% 55%;
    --secondary: 220 15% 92%;
    --muted: 220 15% 80%;
    --accent: 220 12% 94%;
    --destructive: 355 85% 60%;
    --foreground: 220 20% 15%;
    --card-foreground: 224 20% 35%;
    --popover-foreground: 224 20% 35%;
    --primary-foreground: 210 20% 98%;
    --secondary-foreground: 220 10% 35%;
    --muted-foreground: 220 10% 60%;
    --accent-foreground: 260 15% 20%;
    --destructive-foreground: 0 0% 100%;
    --border: 220 10% 80%;
    --input: 240 10% 96%;
    --ring: 230 100% 65%;
    --radius: 12px;

    --success: theme(--color-lime-500);
    --alert: theme(--color-yellow-500);
    --error: theme(--color-rose-500);
  }

  .dark {
    --background: 220 30% 2%;
    --card: 220 25% 10%;
    --popover: 220 12% 13%;
    --primary: 240 100% 45%;
    --secondary: 220 20% 25%;
    --muted: 220 10% 25%;
    --accent: 220 12% 22%;
    --destructive: 350 75% 45%;
    --primary-foreground: 0 0 100%;
    --foreground: 210 12% 98%;
    --card-foreground: 210 15% 90%;
    --popover-foreground: 210 15% 90%;
    --secondary-foreground: 220 15% 90%;
    --muted-foreground: 210 10% 50%;
    --accent-foreground: 210 15% 90%;
    --destructive-foreground: 250 20% 98%;
    --border: 220 10% 30%;
    --input: 220 10% 10%;
    --ring: 230 80% 50%;
  }
}

@theme {
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-xs: calc(var(--radius) - 8px); /*  4 */
  --radius-sm: calc(var(--radius) - 4px); /*  8 */
  --radius-md: calc(var(--radius) + 2px); /* 14 */
  --radius-default: var(--radius); /* 12 */
  --radius-lg: calc(var(--radius) + 4); /* 16  */
  --radius-xl: calc(var(--radius) + 8px); /* 20 */

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }

    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }

    to {
      height: "0";
    }
  }
}

.rounded {
  border-radius: var(--radius);
}

button {
  cursor: pointer;
}

@layer base {
  body {
    @apply bg-background text-foreground font-light antialiased;
  }
}

.ProseMirror {
  font-feature-settings:
    "ss01" 1,
    "cv05" 1,
    "ss03" 1,
    "cv11" 1,
    "calt" 1 !important; /* fix for Chrome */
}

body {
  font-feature-settings:
    "ss01" 1,
    "cv05" 1,
    "ss03" 1,
    "cv11" 1;
}

.glass {
  @apply bg-popover/75 border border-white/50 ring-1 ring-black/10 backdrop-blur-lg;
}

.dark .glass {
  @apply border-border ring-background border;
}

.action-item {
  @apply bg-card text-secondary-foreground ring-ring ring-offset-background hover:bg-secondary relative flex w-full ring-offset-2 outline-hidden transition select-none focus-within:ring-2 focus:ring-2;
}

.action-row {
  @apply px-3 py-2;
}

.dark .action-item.action-delayed {
  @apply bg-rose-950 text-rose-100;
}
.action-item.action-delayed {
  @apply bg-rose-50 text-rose-700;
}

.action-content-delayed > .late-border {
  @apply block;
}

.action-content-delayed {
  @apply bg-rose-500;
}

.action-content-delayed .the-action-content {
  @apply opacity-50;
}

.scrollbars {
  @apply mr-1 h-full overflow-hidden overflow-y-auto px-1;
  scrollbars-gutter: stable;
}

.scrollbars::-webkit-scrollbar {
  @apply mr-4 block w-2;
}
.scrollbars-thin::-webkit-scrollbar {
  @apply mr-4 block w-1;
}
.scrollbars::-webkit-scrollbar-button {
  @apply hidden;
}

.scrollbars::-webkit-scrollbar-track {
  @apply bg-transparent;
}
.scrollbars::-webkit-scrollbar-track-piece {
  @apply mr-4 bg-transparent;
}

.scrollbars::-webkit-scrollbar-thumb {
  @apply rounded-full;
}

.scrollbars-horizontal {
  @apply mb-1 h-full overflow-x-auto overflow-y-hidden py-1;
  scrollbars-gutter: stable;
}

.scrollbars-horizontal::-webkit-scrollbar {
  @apply mb-2 block h-2;
}
.scrollbars-horizontal-thin::-webkit-scrollbar {
  @apply mb-1 block h-1;
}
.scrollbars-horizontal::-webkit-scrollbar-button {
  @apply hidden;
}

.scrollbars-horizontal::-webkit-scrollbar-track {
  @apply bg-transparent;
}
.scrollbars-horizontal::-webkit-scrollbar-track-piece {
  @apply mx-1 bg-transparent;
}
.scrollbars-horizontal::-webkit-scrollbar-thumb {
  @apply mb-4 rounded-full;
}

.scrollbars-horizontal::-webkit-scrollbar-thumb,
.scrollbars::-webkit-scrollbar-thumb {
  @apply bg-foreground/20 hover:bg-foreground/35;
}

.bg-label {
  @apply flex gap-2 px-4 text-xl font-semibold tracking-tighter;
}
.bg-item {
  @apply flex gap-2 px-4;
}

.bg-select-item {
  @apply pr-4 pl-8;
}

.debug-1 {
  @apply border-2 border-red-500;
}
.debug-2 {
  @apply border-2 border-yellow-500;
}
.debug-3 {
  @apply border-2 border-green-500;
}
.debug-4 {
  @apply border-2 border-sky-500;
}
.debug-5 {
  @apply border-2 border-pink-500;
}

.editor-tiptap {
  @apply flex min-h-[50vh] flex-col lg:min-h-full;
}

.editor-tiptap > div:nth-child(2) {
  @apply flex flex-1 shrink-0 flex-col;
}

.tiptap {
  @apply flex-1 shrink-0 text-lg tracking-tight outline-hidden;
}

.tiptap > * {
  @apply mb-2;
}

.tiptap h1 {
  @apply text-4xl font-bold tracking-tight;
}
.tiptap h2 {
  @apply text-2xl font-bold tracking-tight;
}
.tiptap h3 {
  @apply text-xl font-bold tracking-wide uppercase;
}
.tiptap h4 {
  @apply text-xl font-bold tracking-tight;
}
.tiptap h5 {
  @apply text-base font-bold tracking-wider uppercase;
}

.tiptap ul,
ol {
  padding: 0 2rem;
}

.tiptap ul {
  list-style: disc;
}
.tiptap ol {
  list-style: decimal;
}

.tiptap hr {
  @apply border-t;
}

.item-container {
  @apply transition;
}

.dragover {
  @apply border-primary bg-primary/10;
}
.dark .dragover {
  @apply border-primary bg-primary/20;
}

#calendar > * {
  @apply border-b;
}

/* .item-odd {
  @apply bg-secondary/25;
} */

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.animate-colors {
  animation: AnimateColors 1s linear infinite;
}

@keyframes AnimateColors {
  0% {
    color: #fc0;
  }
  10% {
    color: #f64;
  }
  30% {
    color: #e6a;
  }
  50% {
    color: #90f;
  }
  60% {
    color: #06f;
  }
  90% {
    color: #0e9;
  }
  100% {
    color: #fc0;
  }
}

.button-trigger {
  @apply ring-ring ring-offset-background hover:bg-secondary rounded border-none p-2 text-sm font-medium ring-offset-2 outline-hidden focus:ring-2;
}

.timer-circle {
  stroke-dasharray: 44; /* Aproximadamente 2 * PI * raio */
  stroke-dashoffset: 44;
  animation: timer 15s linear forwards;
}

@keyframes timer {
  to {
    stroke-dashoffset: 0;
  }
}
